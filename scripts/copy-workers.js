const fs = require('fs');
const path = require('path');

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è worker —Ñ–∞–π–ª–æ–≤ –≤ dist –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏
 */
async function copyWorkers() {
  try {
    const srcDir = path.join(process.cwd(), 'src', 'cron-jobs');
    const distDir = path.join(process.cwd(), 'dist', 'src', 'cron-jobs');
    
    console.log('üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ worker —Ñ–∞–π–ª–æ–≤...');
    console.log(`üìÇ –ò—Å—Ç–æ—á–Ω–∏–∫: ${srcDir}`);
    console.log(`üìÇ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: ${distDir}`);
    
    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if (!fs.existsSync(distDir)) {
      fs.mkdirSync(distDir, { recursive: true });
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è');
    }
    
    // –ß–∏—Ç–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑ src/cron-jobs
    const files = fs.readdirSync(srcDir);
    const workerFiles = files.filter(file => file.endsWith('.js'));
    
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${workerFiles.length} worker —Ñ–∞–π–ª–æ–≤:`);
    
    // –ö–æ–ø–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π worker —Ñ–∞–π–ª
    for (const file of workerFiles) {
      const srcPath = path.join(srcDir, file);
      const distPath = path.join(distDir, file);
      
      fs.copyFileSync(srcPath, distPath);
      console.log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: ${file}`);
    }
    
    console.log('üéâ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ worker —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ worker —Ñ–∞–π–ª–æ–≤:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
copyWorkers(); 